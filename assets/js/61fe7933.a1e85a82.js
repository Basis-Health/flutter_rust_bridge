"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[7902],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(r),f=o,m=c["".concat(u,".").concat(f)]||c[f]||p[f]||i;return r?n.createElement(m,a(a({ref:t},d),{},{components:r})):n.createElement(m,a({ref:t},d))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=c;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},372:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const i={},a="Customizing the Rust Folder Location",l={unversionedId:"guides/custom/custom_rust_folder",id:"guides/custom/custom_rust_folder",title:"Customizing the Rust Folder Location",description:"By default, your Rust code goes into the '/rust' folder, but you can customize this location.",source:"@site/docs/guides/custom/custom_rust_folder.md",sourceDirName:"guides/custom",slug:"/guides/custom/custom_rust_folder",permalink:"/flutter_rust_bridge/guides/custom/custom_rust_folder",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/custom/custom_rust_folder.md",tags:[],version:"current",frontMatter:{}},u={},s=[{value:"Steps:",id:"steps",level:2},{value:"1. Delete the &#39;rust&#39; folder:",id:"1-delete-the-rust-folder",level:3},{value:"2. Create your custom folder:",id:"2-create-your-custom-folder",level:3},{value:"3. Update the Code Generation Configuration:",id:"3-update-the-code-generation-configuration",level:3},{value:"4. Update the Build Configuration (Cargokit):",id:"4-update-the-build-configuration-cargokit",level:3},{value:"Android Configuration:",id:"android-configuration",level:4},{value:"iOS/MacOS Configuration:",id:"iosmacos-configuration",level:4}],d={toc:s};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"customizing-the-rust-folder-location"},"Customizing the Rust Folder Location"),(0,o.kt)("p",null,"By default, your Rust code goes into the '/rust' folder, but you can customize this location.\nLet's call the root folder '/frb', thus the default Rust folder would be '/frb/rust'.",(0,o.kt)("br",{parentName:"p"}),"\n","With the following steps, you can locate it anywhere else. As an example, we will use '/app_core', parallel to '/frb', as the new location.\nFor a complete example, see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/patmuk/flutter-rust-bridge_crux_style/tree/flutter-rust-bridge_codegen"},"this project"),":"),(0,o.kt)("h2",{id:"steps"},"Steps:"),(0,o.kt)("h3",{id:"1-delete-the-rust-folder"},"1. Delete the 'rust' folder:"),(0,o.kt)("p",null,"Remove the existing '/frb/rust' folder from your Flutter-Rust-Bridge project as you will be replacing it with your custom folder."),(0,o.kt)("h3",{id:"2-create-your-custom-folder"},"2. Create your custom folder:"),(0,o.kt)("p",null,"Create a new folder in the project and name it 'app_core' (or your preferred name)."),(0,o.kt)("h3",{id:"3-update-the-code-generation-configuration"},"3. Update the Code Generation Configuration:"),(0,o.kt)("p",null,"Generate the 'glue code' by updating the configuration in ",(0,o.kt)("inlineCode",{parentName:"p"},"flutter_rust_bridge.yaml")," located at the root of your project (or equivalent cli arguments):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"rust_input: ../app_core/src/api.rs\nrust_root: ../app_core\nrust_output: ../app_core/src/bridge/generated/mod.rs\n")),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"rust_root")," might not be needed, as it can be derived from ",(0,o.kt)("inlineCode",{parentName:"p"},"rust_input"),").",(0,o.kt)("br",{parentName:"p"}),"\n","Note that in this example, there is a file ",(0,o.kt)("inlineCode",{parentName:"p"},"app_core/src/bridge/mod.rs")," containing ",(0,o.kt)("inlineCode",{parentName:"p"},"pub mod generated;"),".\nIf you want to implement a similar (optional) structure, be sure to surpress codegen adding a module with ",(0,o.kt)("inlineCode",{parentName:"p"},"add_mod_to_lib: false"),".  "),(0,o.kt)("h3",{id:"4-update-the-build-configuration-cargokit"},"4. Update the Build Configuration (Cargokit):"),(0,o.kt)("p",null,"In order for the flutter compiler to find the rust library at the new location conduct the changes.\nThe compiling is done in the cargokit folder, all needed files reside in ",(0,o.kt)("inlineCode",{parentName:"p"},"/frb/rust_builder"),".\nFor each of the different plattfrom targets, the following changes are needed.",(0,o.kt)("br",{parentName:"p"}),"\n","As mentioned, ",(0,o.kt)("inlineCode",{parentName:"p"},"/app_core")," is the location of our Rust project, the name of the project (reffered to as ",(0,o.kt)("inlineCode",{parentName:"p"},"libname")," in the configuration files) is ",(0,o.kt)("inlineCode",{parentName:"p"},"app_core")," as well."),(0,o.kt)("h4",{id:"android-configuration"},"Android Configuration:"),(0,o.kt)("p",null,"Update the file ",(0,o.kt)("inlineCode",{parentName:"p"},"build.gradle")," located at ",(0,o.kt)("inlineCode",{parentName:"p"},"frb/rust_builder/android/build.gradle"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},'android {\n  // ... other configurations ...\n\n  apply from: "../cargokit/gradle/plugin.gradle"\n  cargokit {\n-     manifestDir = "../../rust"\n-     libname = "rust_lib"\n+     manifestDir = "../../../app_core"\n+     libname = "app_core"\n  }\n}\n')),(0,o.kt)("h4",{id:"iosmacos-configuration"},"iOS/MacOS Configuration:"),(0,o.kt)("p",null,"The same changes are needed, thus update the file ",(0,o.kt)("inlineCode",{parentName:"p"},"rust_builder.podspec")," located at ",(0,o.kt)("inlineCode",{parentName:"p"},"frb/rust_builder/ios/rust_builder.podspec")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"frb/rust_builder/macos/rust_builder.podspec")," respectively:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},"  // ... other configurations ...\n\n   s.script_phase = {\n     :name => 'Build Rust library',\n     # First argument is relative path to the `rust` folder, second is name of rust library\n-    :script => 'sh \"$PODS_TARGET_SRCROOT/../cargokit/build_pod.sh\" ../../rust rust_lib',\n+    :script => 'sh \"$PODS_TARGET_SRCROOT/../cargokit/build_pod.sh\" ../../../app_core app_core',\n     :execution_position => :before_compile,\n     :input_files => ['${BUILT_PRODUCTS_DIR}/cargokit_phony'],\n     # Let XCode know that the static library referenced in -force_load below is\n     # created by this build step.\n-    :output_files => [\"${BUILT_PRODUCTS_DIR}/librust_lib.a\"],\n+    :output_files => [\"${BUILT_PRODUCTS_DIR}/libapp_core.a\"],\n   s.pod_target_xcconfig = {\n     'DEFINES_MODULE' => 'YES',\n     # Flutter.framework does not contain a i386 slice.\n     'EXCLUDED_ARCHS[sdk=iphonesimulator*]' => 'i386',\n-    'OTHER_LDFLAGS' => '-force_load ${BUILT_PRODUCTS_DIR}/librust_lib.a',\n+    'OTHER_LDFLAGS' => '-force_load ${BUILT_PRODUCTS_DIR}/libapp_core.a',\n  }\nend\n")),(0,o.kt)("p",null,"###\xa0Linux/Windows Confuguration:"),(0,o.kt)("p",null,"The same changes are needed, thus update the file ",(0,o.kt)("inlineCode",{parentName:"p"},"CMakeList.txt")," located at ",(0,o.kt)("inlineCode",{parentName:"p"},"frb/rust_builder/linux/CMakeList.txt")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"frb/rust_builder/windows/CMakeList.txt")," respectively:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},'  // ... other configurations ...\n\ninclude("../cargokit/cmake/cargokit.cmake")\n- apply_cargokit(${PROJECT_NAME} ../../../../../../rust rust_lib "")\n+ apply_cargokit(${PROJECT_NAME} ../../../../../../../app_core app_core "")\n\n# List of absolute paths to libraries that should be bundled with the plugin.\n# This list could contain prebuilt libraries, or libraries created by an\n')))}p.isMDXComponent=!0}}]);