"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[886],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),f=s(n),d=o,m=f["".concat(l,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6586:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={},a="Function operations",u={unversionedId:"guides/miscellaneous/functions",id:"guides/miscellaneous/functions",title:"Function operations",description:"Ignore a function",source:"@site/docs/guides/miscellaneous/functions.md",sourceDirName:"guides/miscellaneous",slug:"/guides/miscellaneous/functions",permalink:"/flutter_rust_bridge/guides/miscellaneous/functions",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/miscellaneous/functions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Expanding macros",permalink:"/flutter_rust_bridge/guides/miscellaneous/expanding-macros"},next:{title:"Parameter defaults",permalink:"/flutter_rust_bridge/guides/miscellaneous/default"}},l={},s=[{value:"Ignore a function",id:"ignore-a-function",level:2},{value:"Rename a function",id:"rename-a-function",level:2}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"function-operations"},"Function operations"),(0,o.kt)("h2",{id:"ignore-a-function"},"Ignore a function"),(0,o.kt)("p",null,"Sometimes you may want functions not to be translated by flutter_rust_bridge."),(0,o.kt)("p",null,"Firstly, if it is private, i.e. not ",(0,o.kt)("inlineCode",{parentName:"p"},"pub"),", it will automatically be ignored."),(0,o.kt)("p",null,"Secondly, if it is public but still needs to be ignored,\nyou can use the attribute ",(0,o.kt)("inlineCode",{parentName:"p"},"#[frb(ignore)]")," to ignore it.\nFor example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'#[frb(ignore)]\npub fn ignored_in_frb() {\n  println!("you should not see ignoredInFrb in dart side.");\n}\n')),(0,o.kt)("p",null,"This feature also supports methods. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'struct RandomStruct;\nimpl RandomStruct {\n  pub fn ignored_in_frb() {\n    println!("you should not see ignoredInFrb within RandomStruct in dart side.");\n  }\n}\n')),(0,o.kt)("p",null,"Currently ",(0,o.kt)("inlineCode",{parentName:"p"},"#[frb(ignore)]")," doesn't support enums and structs yet - feel free to open an issue if your scenario needs it."),(0,o.kt)("h2",{id:"rename-a-function"},"Rename a function"),(0,o.kt)("p",null,"To customize the name on Dart side to be different from the name on Rust side, the ",(0,o.kt)("inlineCode",{parentName:"p"},"#[frb(name = ...)]")," can be used.\nFor example,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'#[frb(name = "g")]\npub fn f() {}\n')),(0,o.kt)("p",null,"will generate function named ",(0,o.kt)("inlineCode",{parentName:"p"},"g")," on Dart side."))}p.isMDXComponent=!0}}]);